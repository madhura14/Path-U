/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package utility;
import java.util.ArrayList;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.DefaultMutableTreeNode;
import java.util.Enumeration;
import javax.swing.JTree;
import javax.swing.JFrame;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
/**
 *
 * @author admin
 */
public class DGUFrame extends javax.swing.JFrame {

    /**
     * Creates new form DGUFrame
     */
    Details dt=new Details();
    
    int min_Util;
   static long start;
    
    public DGUFrame(int min) {
        initComponents();
        min_Util=min;
        long start=System.currentTimeMillis();
           this.start=start;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Andalus", 0, 30)); // NOI18N
        jLabel1.setText("Mining High Utility Itemsets");

        jTable3.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item"
            }
        ));
        jTable3.setRowHeight(25);
        jScrollPane3.setViewportView(jTable3);

        jButton1.setFont(new java.awt.Font("Andalus", 0, 17)); // NOI18N
        jButton1.setText("ReOrganize Transaction");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable5.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TId", "Re-Org Transaction", "RTU"
            }
        ));
        jTable5.setRowHeight(25);
        jScrollPane5.setViewportView(jTable5);

        jTable4.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item"
            }
        ));
        jTable4.setRowHeight(25);
        jScrollPane4.setViewportView(jTable4);

        jButton2.setFont(new java.awt.Font("Cambria Math", 0, 17)); // NOI18N
        jButton2.setText("DGN");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Andalus", 0, 16)); // NOI18N
        jLabel2.setText("Promising Item");

        jLabel3.setFont(new java.awt.Font("Andalus", 0, 16)); // NOI18N
        jLabel3.setText("Un Promising Item");

        jLabel4.setText("jLabel4");

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(213, 213, 213)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(151, 151, 151))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(184, 184, 184))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jButton2)))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            jButton2.setEnabled(true);

            ArrayList at1=dt.prom;
            String str[][]=new String[at1.size()][2];
            for(int i=0;i<at1.size();i++)
            {
                String g1[]=at1.get(i).toString().split("#");
                str[i][0]=g1[0];
                str[i][1]=g1[1];
            }

            for(int i=0;i<str.length;i++)
            {
                for (int j=i+1;j<str.length;j++)
                {
                    if(Integer.parseInt(str[i][1])<Integer.parseInt(str[j][1]))
                    {
                        String t1=str[i][0];
                        str[i][0]=str[j][0];
                        str[j][0]=t1;

                        String t2=str[i][1];
                        str[i][1]=str[j][1];
                        str[j][1]=t2;
                    }
                }
            }
            System.out.println("promise ");
            ArrayList lt1=new ArrayList();
            for(int i=0;i<str.length;i++)
            {
                System.out.println(str[i][0]+" : "+str[i][1]);
                lt1.add(str[i][0]);
            }
            DBConnection db=new DBConnection();
            Statement st=db.stt;
            ResultSet rs=st.executeQuery("Select * from Trans");  // database sacan
            ArrayList lt2=new ArrayList();
            while(rs.next())
            {
                lt2.add(rs.getString(2));
            }

            for(int i=0;i<lt2.size();i++)
            {
                String g1[]=lt2.get(i).toString().split("@");
                String st1="";
                for(int j=0;j<lt1.size();j++)
                {
                    for(int k=0;k<g1.length;k++)
                    {
                        if(g1[k].contains(lt1.get(j).toString()))
                        {
                            st1=st1+g1[k]+"@";
                            break;
                        }
                    }
                }
                if(st1.contains("@"))
                st1=st1.substring(0, st1.lastIndexOf("@"));
                System.out.println(" ---- "+st1);
                if(st1.equals(""))
                {

                }
                else
                dt.list1.add(st1);
            }
            ArrayList RTU=new ArrayList();

            DefaultTableModel dm1=(DefaultTableModel)jTable5.getModel();
            for(int i=0;i<dt.list1.size();i++)
            {
                String g1[]=dt.list1.get(i).toString().split("@");
                int tu1=0;
                for(int j=0;j<g1.length;j++)
                {
                    String g2[]=g1[j].split("#");
                    String it=g2[0];
                    System.out.println("--> "+g1[j]);
                    int q=Integer.parseInt(g2[1].trim());
                    ResultSet rs1=st.executeQuery("select Profit from Profit_Info where Item='"+it+"'");
                    if(rs1.next())
                    {
                        tu1=tu1+q*rs1.getInt(1);
                    }
                }
                String g2=dt.list1.get(i).toString().replace("@", ")(");
                String g3=g2.replace("#", ",");
                System.out.println((i+1)+" : "+tu1);
                Vector v1=new Vector();
                v1.add("T"+(i+1));
                v1.add("("+g3+")");
                v1.add(tu1);
                RTU.add(tu1);
                dm1.addRow(v1);
            }

            for(int i=0;i<dt.list1.size();i++)
            {
                String g1[]=dt.list1.get(i).toString().split("@");
                int rt1=Integer.parseInt(RTU.get(i).toString());
                String b="";
                for(int j=0;j<g1.length;j++)
                {
                    int tu1=0;
                    for(int k=j+1;k<g1.length;k++)
                    {
                        String g2[]=g1[k].split("#");
                        String it=g2[0];
                        int q=Integer.parseInt(g2[1].trim());
                        ResultSet rs1=st.executeQuery("select Profit from Profit_Info where Item='"+it+"'");
                        if(rs1.next())
                        {
                            tu1=tu1+q*rs1.getInt(1);
                        }
                    }
                    int val1=rt1-tu1;
                    System.out.println(i+" === "+g1[j]+" === "+val1);
                    String h1[]=g1[j].split("#");
                    b=b+h1[0]+"#"+val1+"@";
                }
                b=b.substring(0, b.lastIndexOf("@"));
                dt.list2.add(b);

            }

        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
         
                    
            for(int i=0;i<dt.list2.size();i++)
            System.out.println(dt.list2.get(i));

            DefaultMutableTreeNode root = new DefaultMutableTreeNode("ROOT");

            DefaultTreeModel model = new DefaultTreeModel(root);

            JTree tree = new JTree(model);
            for(int i=0;i<dt.list2.size();i++)
            buildTreeFromString(model,dt.list2.get(i).toString());

            for(int i=0;i<dt.list2.size();i++)
            {
                String g2[]=dt.list2.get(i).toString().trim().split("@");
                for(int j=0;j<g2.length;j++)
                {
                    //String g3[]=g2[0].trim().split("#");
                    String g3[]=g2[j].trim().split("#");
                    if(!dt.rt1.contains(g3[0]))
                    {
                        dt.rt1.add(g3[0]);
                        dt.rt2.add(g3[1]);
                        dt.rt3.add("1");
                    }
                    else
                    {
                        int ind1=dt.rt1.indexOf(g3[0]);
                        int v1=Integer.parseInt(dt.rt2.get(ind1).toString());
                        v1=v1+Integer.parseInt(g3[1]);
                        dt.rt2.set(ind1,v1);

                        int v2=Integer.parseInt(dt.rt3.get(ind1).toString());
                        v2=v2+1;
                        dt.rt3.set(ind1,v2);
                    }
                }

            }

            expandAll(tree,true);

            JFrame f = new JFrame();
            f.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
            f.add(tree);
            f.setSize(300, 300);
            f.setLocation(200, 200);
            f.setVisible(true);
            f.setTitle("UP Tree");

            System.out.println("r1 "+dt.rt1);
            System.out.println("r2 "+dt.rt2);
            System.out.println("r3 "+dt.rt3);
            System.out.println("chils "+dt.child1);

            Long end=System.currentTimeMillis();
            System.err.println("end......"+end);
           dt.execution=end-start;
            System.err.println(dt.execution);
            DLUFrame dlu=new DLUFrame(min_Util);
            dlu.setTitle("DLU");
            dlu.setResizable(false);
            dlu.setVisible(true);
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

     public void expandAll(JTree tree, boolean expand) 
    {
        TreeNode root = (TreeNode) tree.getModel().getRoot();
    
        expandAll(tree, new TreePath(root), expand);
    }

    public  void expandAll(JTree tree, TreePath parent, boolean expand) 
    {
    
        TreeNode node = (TreeNode) parent.getLastPathComponent();

	
        if (node.getChildCount() >= 0) 
	{
            for (Enumeration e = node.children(); e.hasMoreElements();) 
            {
                TreeNode n = (TreeNode) e.nextElement();
		TreePath path = parent.pathByAddingChild(n);
                expandAll(tree, path, expand);		
            }
        }
       
        if(node.getChildCount()==0)
        {
            System.out.println(node+ " : "+node.getChildCount());
            if(!dt.child1.contains(node))
                dt.child1.add(node);
        }
    
        if (expand) 
	{
	      tree.expandPath(parent);
        }
	else 
	{
		
            tree.collapsePath(parent);
        }
  }
    
    
    
    void buildTreeFromString(final DefaultTreeModel model, final String str) 
    {
        
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();

        String [] strings = str.split("@");

        DefaultMutableTreeNode node = root;

       
        for (String s: strings) 
	{
            String g1[]=s.split("#");
             s=g1[0];
            int index = childIndex(node, s);
            if (index < 0) 
            {
            
                DefaultMutableTreeNode newChild = new DefaultMutableTreeNode(s);
                node.insert(newChild, node.getChildCount());
		//System.out.println(node.toString()+" : "+s);
                node = newChild;
				
            }
            
            else 
            {
                node = (DefaultMutableTreeNode) node.getChildAt(index);
		//System.out.println("-- "+node.toString());
            }
        }
    }

    
    private int childIndex(final DefaultMutableTreeNode node, final String childValue) 
    {
        Enumeration<DefaultMutableTreeNode> children = node.children();
        DefaultMutableTreeNode child = null;
        int index = -1;

        while (children.hasMoreElements() && index < 0) 
	{
            child = children.nextElement();

            if (child.getUserObject() != null && childValue.equals(child.getUserObject())) 
            {
                index = node.getIndex(child);
            }
        }

        return index;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DGUFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DGUFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DGUFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DGUFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new DGUFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    public javax.swing.JTable jTable3;
    public javax.swing.JTable jTable4;
    public javax.swing.JTable jTable5;
    // End of variables declaration//GEN-END:variables
}
